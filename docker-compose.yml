services:
  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - WEATHER_API_KEY=${WEATHER_API_KEY:-dev_key}
      - GROQ_API_KEY=${GROQ_API_KEY:-dev_key}
      - ENVIRONMENT=development
      - API_ENTRY_POINT=main_api:app  # Unified API - ALL features
      - API_VERSION=unified
      - API_TYPE=production
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
      - API_DEBUG=${API_DEBUG:-true}
      - DATABASE_URL=${DATABASE_URL:-postgresql://anga_user:anga_password@postgres:5432/anga_weather}
      - SECRET_KEY=${SECRET_KEY:-your_super_secret_key_here}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - OPEN_METEO_BASE_URL=${OPEN_METEO_BASE_URL:-https://api.open-meteo.com/v1/forecast}
      - MOBILE_APP_VERSION=${MOBILE_APP_VERSION:-1.0.0}
      - MOBILE_APP_NAME=${MOBILE_APP_NAME:-ANGA Weather}
      - DEBUG_MODE=${DEBUG_MODE:-true}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      - redis
    networks:
      - anga-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - anga-network
    restart: unless-stopped

  # PostgreSQL database (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=anga_weather
      - POSTGRES_USER=anga_user
      - POSTGRES_PASSWORD=anga_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - anga-network
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - anga-network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  anga-network:
    driver: bridge 